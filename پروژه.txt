مدیریت دانشگاه
دانشگاه به برنامهای نیاز دارد که در شروع هر ترم کالسهای فیزیکی موجود در دانشکده را به ردوس مختلف
تخصیص دهد. نکته مهم این است که دروس تخصیص داده شده به کالسها دارای تداخل نباشند. مثًال
برای درس برنامه نویسی پیشرفته که باید در روزهای شنبه در ساعت 30:8 شروع و به مدت 2 ساعت برگزار
گردد و به ویدئوپروژکتور نیاز دارد، اطالعات زیر وارد میشود:
و به همین ترتیب برای سایر دروس اطالعاتی به همین شکل وارد میگردد. عالوه بر موارد فوق الزم است که
یک فیلد location( محل( نیز برای هر درس در نظر گرفته شود که این فیلد با شماره کالس تخصیص داده
شده به آن درس پر میشود. برای اینکار دو حالت در نظر بگیرید، حالتی که فیلد محل توسط برنامه تعیین
گردد و حالت دوم این فیلد مستقیمًا توسط مسئول آموزش پر شود، اما برنامه موظف است که درستی
قابلیت تخصیص یک کالس به یک درس را چک کند.
ID: AP001
Name: Advanced Programming
Day: Saturday
Time:
start:
hour: 8
minute: 30
duration:
hour: 2
minute: 0
Video projector: TRUE
Student list:
880025
871150
850190
850222
887951
889260
884151
Teacher: lotfi
عالوه بر دروس رسمی دانشگاه، یک سری دروس فوق برنامه نیز گاهًا برگزار میگردند )مثًال کالسهای برگزار
شده توسط انجمن علمی(. این دروس همهی مشخصههای دروس رسمی را دارند، تنها تفاوت آنها این
است که این دروس موقتی هستند و تا آخر ترم ادامه ندارند. مثًال ممکن است دورهای در سه جلسه کامل
شود اما دورهی دیگری به 10 جلسه نیاز داشته باشد. این پارامتر در هنگام تعریف درس مشخص میشود و
در تخصیص کالس به این دروس باید به این پارامتر نیز توجه داشته باشید.
برای هر کالس، شماره کالس، ظرفیت کالس و اینکه دارای ویدئوپروژکتور هست یا خیر و ID درسی که به
آن کالس تخصیص داده میشود، نگهداری میکنیم.
الف( اطالعات مربوط به هر درس و کلیه کالسها را به نحو مناسب از کاربر دریافت نمایید )مثًال از یک فایل
اطالعات را بخوانید(. توابعی نیز در نظر بگیرید که به کمک آنها بتوانید در صورت لزوم اطالعات مربوطه را
اصالح کنید. کلید تخصصی دستیابی به یک درس ID آن درس و کلید دستیابی به یک کالس شماره آن
کالس است که برای اصالح مشخصات هر یک از آنها با استفاده از این کلیدها میتوانید جستجوی الزم را
انجام دهید.
برای راحتی کار میتوانید هر شماره دانشجویی را یک int در نظر بگیرید.
تاریخ شامل روز و ماه و سال است و ساعت شامل ساعت و دقیقه شروع کالس و ساعت و دقیقه مدت
زمان کالس است.
ساعت شروع و پایان کالس میتواند هر بازه ای از ساعت باشد. زمان ثابت و دقیقی مد نظر نیست.
حداکثر تعداد نفراتی که میتوانند در یک کالس حاضر باشند، 40 نفر است.
راهنمایی: برای ساعت و تاریخ کالسهای دیگری تعریف کرده و به نحو مناسب آنها را در کالس مورد
نظرتان استفاده نمائید.
ب( تابعی بنویسید که بتواند مدت زمان برگزاری هر دو کالس درسی را باهم مقایسه نماید. از خروجی این
تابع به نحو مناسب در تخصیص درسها به کالسها استفاده کنید.
ج( تابعی بنویسید که بر اساس زمان شروع کالس و مدت زمان کالس، زمان پایان کالس را برگرداند.
د( تابعی بنویسید که بتواند برسی کند دو کالس از لحاظ محل برگزاری، تداخلی با یکدیگر نداشته باشند.
مثًال اگر کالس 1 در ساعت 15:8 الی 45:9 برگزار میگردد و کالس 2 از ساعت 30:9 الی 30:10 برگزار میگردد،
هردو این کالسها نمیتوانند در کالس 30 برگزار شوند. پیغامهای مناسب در این رابطه در داخل خود تابع
چاپ شوند.
راهنمایی: برای پیادهسازی این تابع الزم نیست آن را حتما به صورت عضو کالس بنویسید )بهتر است
از بحث توابع friend کمک بگیرید(. در ضمن از تابعی که زمان پایان هر کالس را محاسبه میکند نیز
میتوانید در این تابع کمک بگیرید.
هـ( تابعی بنویسید که بتواند یک گزارش کلی از لیست کالسها شامل، ID کالس، نام کالس، تعداد
دانشجویان کالس، روز و ساعت شروع و پایان کالس، نام استاد کالس، محل برگزاری کالس و دارای
ویدئوپروژکتور بودن کالس درست کرده و در یک فایل txt ذخیره کند. همچنین فایل گزارش باید شامل
لیست کامل از دانشجویان و اساتید )بدون تکرار( باشد.
خالقیت در طراحی فایل گزارش بر عهده دانشجو میباشد اما موارد گفته شده باید در گزارش موجود
باشند.
در پیادهسازی این پروزه نیز نکات زیر را مد نظر قرار دهید:
شئگرایی کامل برنامه
ارثبری )Inheritance)
چندریختی )Polymorphism)
بکارگیری الگو )Template)
تقسمبندی مناسب کد و توزیع منطقی آن در فایلهای مختلف
هر دانشجو و هر استاد میتوانند در هر لحظه در یک درس حضور داشته باشند؛ برنامه باید قادر به
کنترل این مورد و پیشگیری از ثبت موارد احتماًال اشتباه وارد شده باشد.
ID درسها و شماره کالسها باید منحصر بفرد باشند. برنامه باید هنگام ورود اطالعات این مورد را
ارزیابی کند و از ثبت ID های تکراری و یا شماره کالسهای تکراری جلوگیری کند.
استفاده مناسب از فایلها برای ورودی/خروجی : استفاده از توابع کتابخانهای مربوط به فایلها در
زبان C ++اجباری است. از مباحث فایل C استفاده نکنید.
برنامه دارای کامنتهای خوانا و ترجیحًا به زبان انگلیسی باشد.
برای مرتبسازی از الگوریتم Quicksort یا Sort Merge استفاده نمایید.
برای جستجو از روش جستجوی دودویی یا Search Binary بهره ببرید.
در این پروژه از پایگاهداده رابطهای استفاده نکنید.
در مواردی که به طور دقیق عملکرد موردنیاز برنامه مشخص نشده است، به صور دلخواه عمل کنید و
در مستندات برنامه راجب آن توضیح دهید.
پروژه باید به صورت یک فایل ZIP حداکثر 20 مگابایتی در Quera آپلود شود. این فایل ZIP شامل
پوشه پروژه )که دارای تمامی کدهای پروژه میباشد( و یک فایل PDF از مستندات پروژه باشد.
موارد زیر نمره اضافه دارد:
استفاده از یک نرمافزار Control Version مانند Git
داشتن رابط کاربری گرافیکی )GUI)
استفاده از Studio Visual یا Q